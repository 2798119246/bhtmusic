<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luanxiede.bhtmusic.dao.RankMapper" >
  <resultMap id="BaseResultMap" type="com.luanxiede.bhtmusic.domain.Rank" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="songListId" property="songListId" jdbcType="BIGINT" />
    <result column="consumerId" property="consumerId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="INTEGER" />
  </resultMap>

  <update id="updateScore" parameterType="com.luanxiede.bhtmusic.domain.Rank">
   update `rank`  set score = #{score,jdbcType=BIGINT} where consumerId = #{consumerId,jdbcType=BIGINT};
  </update>

  <select id="isExistScore" resultType="java.lang.Integer">
    select count(*) from `rank` where  consumerId = #{consumerId,jdbcType=BIGINT};
  </select>
  <select id="selectScoreSum" resultType="java.lang.Integer">
  SELECT COALESCE(sum(score),0) as score from `rank` where songListId = #{songListId,jdbcType=BIGINT} ;
  </select>
  <select id="selectRankNum" resultType="java.lang.Integer">
  SELECT COALESCE(count(id),0) as num from `rank` where songListId =  #{songListId,jdbcType=BIGINT} ;
  </select>
  <insert id="insert" parameterType="com.luanxiede.bhtmusic.domain.Rank" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into `rank` (songListId, consumerId,
      score)
    values (#{#{songListId,jdbcType=BIGINT}, #{consumerId,jdbcType=BIGINT},
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.luanxiede.bhtmusic.domain.Rank" >
    insert into `rank`
    <trim prefix="(" suffix=")" suffixOverrides="," >

      <if test="songListId != null" >
        songListId,
      </if>
      <if test="consumerId != null" >
        consumerId,
      </if>
      <if test="score != null" >
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="songListId != null" >
        #{songListId,jdbcType=BIGINT},
      </if>
      <if test="consumerId != null" >
        #{consumerId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>
