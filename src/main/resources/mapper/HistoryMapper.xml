<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luanxiede.bhtmusic.dao.HistoryMapper">
    <resultMap id="BaseResultMap" type="com.luanxiede.bhtmusic.domain.History" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="id" property="id" jdbcType="INTEGER" />
        <result column="historyId" property="historyId" jdbcType="VARCHAR" />
        <result column="userId" property="userId" jdbcType="INTEGER" />
        <result column="songId" property="songId" jdbcType="INTEGER" />
        <result column="playTime" property="playTime" jdbcType="TIMESTAMP" />
        <result column="views" property="views" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Base_list">
        id,historyId,userId,songId,playTime,views
    </sql>
    <!--插入历史记录-->
    <insert id="insertPrint" parameterType="com.luanxiede.bhtmusic.domain.History">
        insert into history(historyId,userId,songId,playTime,views) values (#{historyId,jdbcType=VARCHAR},
#{userId,jdbcType=INTEGER},#{songId,jdbcType=INTEGER},#{playTime,jdbcType=TIMESTAMP},#{views,jdbcType=INTEGER})
    </insert>
    <!--查询某条历史记录-->
    <select id="findDetail" resultMap="BaseResultMap" parameterType="com.luanxiede.bhtmusic.domain.History">
        select * from history where
            userId = #{userId,jdbcType=INTEGER} and songId = #{songId,jdbcType=INTEGER}
    </select>
    <!--更新历史记录-->
    <update id="updatePrint" parameterType="com.luanxiede.bhtmusic.domain.History">
   update history
    <set>
        <if test="playTime != null">
            playTime = #{playTime,jdbcType=TIMESTAMP},
        </if>
        <if test="views != null">
            views = #{views,jdbcType=INTEGER},
        </if>
    </set>
        where historyId = #{historyId,jdbcType=VARCHAR}
    </update>

    <select id="selectSongIdByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select * from history where
           userId = #{userId,jdbcType=INTEGER}
            order by playTime desc
    </select>
</mapper>
